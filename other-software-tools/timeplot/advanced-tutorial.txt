{{indexmenu_n>8}}

====== Advanced Tutorial =====

Once you've created a basic Timeplot, with a single line of data plotted, you may decide that you want to place additional data on your graph. This tutorial will cover

  * adding additional data (and lines) to your Timeplot,
  * adding points to lines,
  * adding fill colors to lines, and
  * adding colors to events.

This tutorial will walk you through adding this additional data. 

=====Creating Additional Lines on a Timeplot=====

====Adding the Data====
In order to add an additional plotted data line to your Timeplot, you will need to have a source for the data. The easiest way to do this is to edit your data.txt file and add a "column" to the comma-delimited file. 

The two images below demonstrate how to add data to your existing file. The first shows a data file with the two "columns" of sample data for Wichita and Kansas City populations.  In the second picture, we've added an additional data set for the population of St. Louis. You should see how adding an additional data set simply involves appending the numerical data to each data, separating it from the original data with a comma. 

{{https://farm6.staticflickr.com/5596/15144284651_fc2d40f5ee_z.jpg}}

{{https://farm4.staticflickr.com/3845/15146876782_9855dceeff_z.jpg}}

====Adding the Line====

Once you've added the data to your Text file, you will need to modify the code in your HTML file to show the new line of data. This will require you to add some code to the HTML file. 

Remember that the basic install of Timeplot using Installatron provides you with two lines of data to work with. The code you're going to duplicate is one of the blocks of code for one line. 

First, locate the block of code that starts with the line

<code javascript>
var plotInfo = [
</code>

Below this, you will see three blocks, each with a different "id": City1, City2, and Events. 

Copy the block of code for City1 and paste it below the block of code for City2: 

{{https://farm6.staticflickr.com/5569/14960464288_863d5746dc_c.jpg}}


Now, you must edit the block of code you just added. The image below shows were you should (or can) make edits to the code you just pasted: 

{{https://farm6.staticflickr.com/5555/15146655362_c4d95cc591_b.jpg}}

1. You MUST provide a new id for new the new line you are plotting. 
2. You MUST indicate what "column" contains your data in your Text file. (See above about editing your Text file.) In this case, we'll be pulling in the third column for a third line of data. 
3. You can change the line color for the new data line. 
4. You may change whether values appear when you rollover the line. 

You may add additional data/lines as you need by repeating these steps.

===== Adding Points on the Timeplot=====

You may wish to show explicit points (or dots) on your lines, making it visually clearer where each individual data point is plotted.  Doing this requires you to add the following line of code for each set of plot information: 

<code javascript>
dotColor: "#FF0000",
</code>

Note that you must declare a color for the dots, and it must be in a hexadecimal format. 

We recommend placing the code directly above the line of code that indicates you want to show data values: 

{{https://farm4.staticflickr.com/3904/14960415499_2cfd2e69cc_c.jpg}}

The picture above illustrates the placement of this code, in this case for three sets of data that we've plotted.

=====Adding Fill Colors to Line Plots=====
Timeplot allows you to add color to fill in the space below each line. You will need to add a new property for each set of plot information. The line you need to add are: 

<code javascript>
fillColor: "#FF0000",
</code>

You can choose whatever hexadecimal color code you like for these properties. We recommend placing the code directly below the line of code that indicates the line color: 

{{https://farm4.staticflickr.com/3912/14960516749_1f5f329973_c.jpg}} 

=====Changing the Color of Events=====
You may also change the color of the lines/bands created by your event data. Making this change requires editing your event XML file (instead of the HTML file). If you used the default XML file that was installed, the file name will be "events.xml" You may refer to the [[other-software-tools:timeplot:explanation-of-the-xml-file|explanation of the XML File]] for a reminder about how to access and edit that file. 

Once you have the file open, you can simply add a "color" property to each event. You can use different colors, for example, to group events that have a similar theme. 

A sample event code BEFORE you add the color would look like this: 

<code xml>
<event start="Jan 20 2009 08:00:00 GMT-0600" title="Conclusion of second term" link=""/>
</code>

A sample event code AFTER you add the color would look like this: 

<code xml>
<event start="Jan 20 2009 08:00:00 GMT-0600" title="Conclusion of second term" color= "#FF0000" link=""/>
</code>

The image below depicts what the sample code would look like after we add colors to the events: 

{{https://farm4.staticflickr.com/3920/15144197931_a577dd7ffc_c.jpg}}

Note that the color is, once again, defined as a hexadecimal code. In addition, the value must be placed in quotes. 

Make sure you save your XML file when you're done editing it. 

**NOTE: You may find after editing your XML file that you must browse to and refresh that file in order for the changes to become evident in your Timeplot (Alternatively, you can empty your browse cache).**